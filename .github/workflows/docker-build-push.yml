name: Build Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: "recursive"

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to private Docker Registry
        uses: docker/login-action@v3
        with:
          registry: registry.lunary.ai
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/backend/Dockerfile
          push: true
          tags:
            registry.lunary.ai/backend:${{ steps.timestamp.outputs.timestamp }}-${{ github.sha }},
            registry.lunary.ai/backend:latest
          platforms: linux/amd64

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/frontend/Dockerfile
          push: true
          tags:
            registry.lunary.ai/frontend:${{ steps.timestamp.outputs.timestamp }}-${{ github.sha }},
            registry.lunary.ai/frontend:latest
          platforms: linux/amd64

      # - name: Build and push db
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./ops/frontend/Dockerfile
      #     push: true
      #     tags:
      #       registry.lunary.ai/db:${{ steps.timestamp.outputs.timestamp }}-${{ github.sha }},
      #       registry.lunary.ai/db:latest
      #     platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_IP_ADDRESS }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 3855
          script: |
            cd /opt/lunary
            docker compose pull
            docker compose down
            docker compose up -d
